git clone https://github.com/kubernetes-sigs/kubespray.git
git clone https://github.com/Petrichao/otus_project.git

cd kubespray

python -m venv venv

source venv/bin/activate
pip install -r requirements.txt

ansible-playbook -i /home/petrich/otus_project/otus-cluster/inventory.ini -b -v --private-key=~/.ssh/id_rsa cluster.yml

sudo kubectl apply -f /home/petrich/otus_project/manifests/ns-argocd.yaml
sudo kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
sudo kubectl patch configmap argocd-cmd-params-cm -n argocd \
  --type merge \
  -p '{"data":{"server.basehref":"/argocd"}}'
sudo kubectl patch configmap argocd-cmd-params-cm -n argocd \
  --type merge \
  -p '{"data":{"server.rootpath":"/argocd"}}'
sudo kubectl patch configmap argocd-cmd-params-cm -n argocd \
  --type merge \
  -p '{"data":{"server.insecure":"true"}}'
sudo kubectl apply -f /home/petrich/otus_project/manifests/svc-argocd-proxy.yaml
sudo kubectl delete pod argocd-server


В argocd
Из репо https://github.com/Petrichao/otus_project.git

Применить манифест manifests/general/ns-otus-proj.yaml
sudo helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx

sudo helm upgrade --install general-ingress ingress-nginx/ingress-nginx \
  --namespace otus-proj \
  --set controller.service.type=NodePort \
  --set controller.service.nodePorts.http=30080 \
  --set controller.ingressClassResource.name=general-nginx

Применить манифест manifests/general/ing-general.yaml


Из репо https://github.com/Petrichao/otus_project.git
Применить манифест manifests/grafana/ns-monitoring.yaml
Применить манифест manifests/grafana/ds-promtail.yaml
sudo helm repo add grafana https://grafana.github.io/helm-charts
sudo helm install grafana grafana/grafana --namespace monitoring --values /home/petrich/otus_project/manifests/values/v-grafana.yaml
sudo helm install loki grafana/loki --namespace monitoring --values /home/petrich/otus_project/manifests/values/v-loki.yaml
http://loki.monitoring.svc.cluster.local:3100